name: Test AWS Connectivity

on:
  push:
    branches:
      - main

jobs:
  aws-connectivity:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del c√≥digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Instalar AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      # Paso 3: Configurar las credenciales de AWS
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region us-east-1

      # Paso 4: Ejecutar el comando aws sts get-caller-identity
      - name: Get AWS Caller Identity
        run: aws sts get-caller-identity

      # Paso 5: Listar las subredes en la VPC
      - name: List subnets in VPC
        run: aws ec2 describe-subnets --filters "Name=vpc-id,Values=vpc-02ee44d7135379986" --query "Subnets[*].SubnetId"

      # Paso 6: Crear el DB Subnet Group si no existe
      - name: Create DB Subnet Group if not exists
        run: |
          if ! aws rds describe-db-subnet-groups --db-subnet-group-name my-db-subnet-group --query "DBSubnetGroups" --output text | grep -q "my-db-subnet-group"; then
            aws rds create-db-subnet-group \
              --db-subnet-group-name my-db-subnet-group \
              --db-subnet-group-description "My DB Subnet Group_PALBERT" \
              --subnet-ids subnet-05f8faaf2df741c92 subnet-0243ce1624f80fa0a subnet-032d6270631e9647c subnet-0cef4fb9a685ed94b subnet-0042b0d22b619d60d subnet-07147c0253ed59f2a
          else
            echo "DB Subnet Group 'my-db-subnet-group' already exists, skipping creation."
          fi
          
      # Paso 7: Verificar si la instancia de RDS ya existe
      - name: Check if RDS instance exists
        run: |
          INSTANCE_EXISTS=$(aws rds describe-db-instances --db-instance-identifier mydb-instance --query "DBInstances[0].DBInstanceIdentifier" --output text)
          if [ "$INSTANCE_EXISTS" != "mydb-instance" ]; then
            echo "RDS instance does not exist. Proceeding to create it."
            aws rds create-db-instance \
              --db-instance-identifier mydb-instance \
              --db-instance-class db.t3.micro \
              --engine mysql \
              --engine-version 5.7 \
              --allocated-storage 20 \
              --storage-type gp2 \
              --vpc-security-group-ids sg-08db0d68f1b78a11e \
              --db-subnet-group-name my-db-subnet-group \
              --master-username admin \
              --master-user-password "MySecurePassword123!" \
              --db-name mydatabase \
              --publicly-accessible \
              --no-multi-az \
              --backup-retention-period 7
          else
            echo "RDS instance 'mydb-instance' already exists. Skipping creation."
          fi
