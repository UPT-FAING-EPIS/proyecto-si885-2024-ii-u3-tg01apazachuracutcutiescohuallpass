name: Generate Infrastructure Diagram

on:
  push:
    branches:
      - main
jobs:
  generate-diagram:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
          python -m pip install --upgrade pip
          pip install diagrams python-hcl2

      - name: Crear archivo Python temporal con el código 
        run: |
          echo "
          import os
          import hcl2
          from diagrams import Diagram, Cluster, Node
          from diagrams.aws.storage import S3
          from diagrams.aws.analytics import Glue
          from diagrams.aws.compute import Lambda
          # Eliminar la importación de IAM ya que no es necesario
          # from diagrams.aws.identity import IAM
      
          with Diagram('AWS Infrastructure', show=False, filename='diagram'):
              # Crear el Bucket S3
              s3_bucket = S3('S3 Bucket\nnetuptinteligencianegocios')
      
              # Crear la base de datos Glue
              glue_database = Glue('Glue Database\ntb_redupt_database')
      
              # Crear el Crawler Glue
              glue_crawler = Glue('Glue Crawler\nnetuptinteligencianegocios-crawler')
      
              # Crear la función Lambda
              lambda_function = Lambda('Lambda Function\ns3-upload-function')
      
              # Crear el rol IAM como un Node genérico
              iam_role = Node('IAM Role\nLabRole', shape='rect')
      
              # Conexiones
              s3_bucket >> glue_crawler  # El bucket S3 es la fuente para el Crawler
              glue_crawler >> glue_database  # El Crawler almacena los datos en la base de datos de Glue
              glue_crawler >> lambda_function  # El Crawler también activa la función Lambda
      
              # IAM Role: El rol es utilizado por el Crawler y Lambda
              iam_role >> glue_crawler
              iam_role >> lambda_function
      
          " > script.py

      - name: Generar el diagrama
        run: |
          python script.py

      - name: Verificar existencia de diagram.png
        run: |
          if [ -f diagram.png ]; then
            echo "Diagrama generado correctamente"
          else
            echo "El archivo diagram.png no se generó. Abortando..."
            exit 1
          fi

      - name: Eliminar archivo temporal script.py
        run: |
          rm script.py

      - name: Commit and Push Diagram
        run: |
          git config --local user.name "JesusHuallpa"
          git config --local user.email "jh2021071085@virtual.upt.pe"
          
          if [ -f "diagram.png" ]; then
              git checkout diagramaTF || git checkout -b diagramaTF
              git add diagram.png
              git commit -m "Actualizar diagrama de infraestructura [skip ci]" || echo "No hay cambios para commit"
              git push origin diagramaTF --force
          else
              echo "Error: diagram.png no se generó."
              exit 1
          fi
