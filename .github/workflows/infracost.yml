
name: infracost

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  aws-connectivity:
    runs-on: ubuntu-latest

    steps: 
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Instalar AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      # Paso 3: Instalar Terraform
      - name: Install Terraform
        run: |
          # Descargar la clave GPG de HashiCorp
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          
          # Agregar el repositorio de HashiCorp
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          
          # Actualizar apt e instalar Terraform
          sudo apt update && sudo apt install -y terraform
      # Paso 4: Configurar las credenciales de AWS
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1
      # Paso 5: Verificar las credenciales con AWS STS
      - name: Get AWS Caller Identity
        run: aws sts get-caller-identity

      # Paso 6: Inicializar Terraform
      - name: Initialize Terraform
        run: |
          cd infra
          terraform init
      # Paso 8: Validar la configuración de Terraform
      - name: Validate Terraform configuration
        run: |
          cd infra
          terraform validate
      # Paso 9: Verificar el estado actual de Terraform
      - name: Check Terraform state
        run: |
          cd infra
          terraform state list
      # Paso 10: Generar el plan de Terraform
      - name: Terraform Plan
        run: |
          cd infra
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json
      # Paso 11: Instalar Infracost
      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}
          infracost configure set currency USD
      - name: Generate Infracost Breakdown
        working-directory: ./infra
        run: |
          # Generar el desglose mensual
          infracost breakdown --path=tfplan.json --format json --out-file infracost.json
          
          # Verificar que el costo mensual esté presente
          infracost output --path infracost.json --format table > infracost_monthly.txt
          MONTHLY_COST=$(infracost output --path infracost.json --format json | jq '.projects[0].breakdown.totalMonthlyCost')
      
          # Agregar el costo estimado manualmente
          LAMBDA_INVOCATIONS=100
          S3_PUT_REQUESTS=100
          GLUE_CRAWLER_HOURS=1
          
          MONTHLY_LAMBDA_COST=$(echo "$LAMBDA_INVOCATIONS * 30 * 0.20 / 1000000" | bc)
          MONTHLY_S3_PUT_COST=$(echo "$S3_PUT_REQUESTS * 30 * 0.005 / 1000" | bc)
          MONTHLY_GLUE_COST=$(echo "$GLUE_CRAWLER_HOURS * 30 * 0.44" | bc)
          
          # Calcular el costo mensual total estimado
          ESTIMATED_MONTHLY_COST=$(echo "$MONTHLY_LAMBDA_COST + $MONTHLY_S3_PUT_COST + $MONTHLY_GLUE_COST" | bc)
          
          # Verificar si el costo mensual está presente y es mayor que 0
          if [[ "$ESTIMATED_MONTHLY_COST" != "null" && "$ESTIMATED_MONTHLY_COST" != "0.00" ]]; then
            # Calcular el costo anual
            ANNUAL_COST=$(echo "$ESTIMATED_MONTHLY_COST * 12" | bc)
            echo "$ANNUAL_COST" > infracost_annual.txt
          else
            echo "Costo mensual no disponible o es 0.00" > infracost_annual.txt
          fi


      # Paso 13: Mostrar el informe de costos mensuales y anuales
      - name: Display Infracost Reports
        working-directory: ./infra
        run: |
          echo "COSTOS MENSUALES:"
          cat infracost_monthly.txt
          echo "COSTO ANUAL ESTIMADO:"
          cat infracost_annual.txt
      
      # Paso 14: Subir informes de costos como artefactos
      - name: Upload Infracost Reports
        uses: actions/upload-artifact@v3
        with:
          name: infracost-reports
          path: |
            ./infra/infracost.json
            ./infra/infracost_monthly.txt
            ./infra/infracost_annual.txt
      # Paso 16: Limpiar credenciales de AWS (opcional)
      - name: Clean up AWS CLI session
        run: |
          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN
